#BlueJ class context
comment0.target=Commands
comment0.text=\r\n\ Creates\ the\ class\ Commands,\ \r\n\ There\ will\ only\ be\ one\ instance\ used\ by\ the\ game\r\n\ therefore\ all\ of\ its\ methods\ are\ static\ to\ prevent\ multiple\r\n
comment1.params=
comment1.target=void\ runGame()
comment1.text=\r\n\ runGame\ method\r\n\ method\ responsible\ for\ running\ a\ console\ version\ of\ the\ game\r\n\ this\ method\ returns\ nothing\ and\ has\ no\ parameters\r\n\ it\ contains\ the\ while\ loop\ that\ is\ used\ to\ run\ the\ game\r\n
comment10.params=objectName
comment10.target=java.lang.String\ drop(java.lang.String)
comment10.text=\ \r\n\ drop\ method\r\n\ Method\ to\ allow\ you\ to\ drop\ an\ item,\ for\ now\ you\ will\ just\ state\ that\ \r\n\ "You\ dropped\ the\ <itemName>."\ where\ <itemName>\ is\ the\ actual\ name\ of\ the\ item.\r\n\ \r\n\ example\ return\ statement\:\r\n\ "You\ dropped\ the\ apple."\r\n\ \r\n\ You\ will\ actually\ drop\ items\ in\ checkpoint\ 5\r\n\ @param\ takes\ in\ a\ string\ to\ determine\ what\ object\ was\ dropped\r\n\ @return\ a\ string\ that\ states\ "You\ dropped\ the\ <itemName>",\ do\ not\ use\ print\ or\ println\ \r\n
comment11.params=
comment11.target=java.lang.String\ look()
comment11.text=\ \ \r\n\ TODO\:\ checkpoint\ 4\ task\r\n\ \r\n\ update\ the\ "look"\ method\ to\ return\ the\ Name\ of\ the\ Room,\ \r\n\ then\ a\ new\ line,\ and\ then\ the\ room's\ description\ instead\ of\ its\ current\ output.\r\n
comment12.params=
comment12.target=java.lang.String\ inventory()
comment12.text=\ \r\n\ inventory\ method\r\n\ Method\ to\ display\ the\ items\ in\ your\ inventory,\ for\ now\ state\r\n\ "The\ current\ items\ in\ your\ inventory\ are\:"\r\n\ \r\n\ In\ checkpoint\ 5\ you\ will\ create\ a\ String\ that\ consists\ of\ all\ of\ the\ \r\n\ items\ in\ your\ inventory\r\n\ \ @return\ the\ "The\ current\ items\ in\ your\ inventory\ are\:",\ do\ not\ use\ print\ or\ println\r\n
comment13.params=itemName
comment13.target=java.lang.String\ examine(java.lang.String)
comment13.text=\r\n\ examine\ method\r\n\ Method\ that\ returns\ the\ description\ on\ an\ item\ in\ your\ inventory,\ for\ now\ state\:\r\n\ "Description\ of\ <itemName>"\ where\ <itemName>\ is\ the\ itemName\r\n\ \r\n\ example\ return\ statement\:\r\n\ "Description\ of\ apple"\r\n\ \r\n\ In\ checkpoint\ 5\ you\ will\ return\ the\ description\ of\ the\ object\ you\ are\ examining\r\n\ @param\ takes\ in\ a\ string\ to\ determine\ what\ item\ you\ want\ the\ description\ of\r\n\ @return\ a\ string\ that\ is\ the\ description\ of\ the\ item,\ do\ not\ use\ print\ or\ println\r\n
comment14.params=itemName
comment14.target=java.lang.String\ eat(java.lang.String)
comment14.text=\r\n\ eat\ method\r\n\ Method\ that\ allows\ you\ to\ eat\ a\ Food\ object,\ for\ now\ state\:\r\n\ "You\ ate\ the\ <itemName>"\ where\ <itemName>\ is\ the\ name\ of\ the\ itemName\r\n\ \r\n\ example\ return\ statement\:\r\n\ "You\ ate\ the\ apple."\r\n\ \r\n\ In\ checkpoint\ 5,\ you\ will\ update\ this\ method\ to\ remove\ it\ from\ your\ inventory,\ \r\n\ but\ not\ drop\ it\ in\ the\ room.\ \ Advanced\:\ this\ could\ be\ useful\ for\ a\ health\ system\r\n\ \r\n\ \r\n\ @param\ takes\ in\ a\ string\ to\ determine\ what\ item\ you\ want\ to\ eat\r\n\ @return\ a\ string\ that\ states\ you\ ate\ the\ item,\ do\ not\ use\ print\ or\ println\r\n
comment15.params=itemName
comment15.target=java.lang.String\ use(java.lang.String)
comment15.text=\ \ \r\n\ use\ method\r\n\ Method\ that\ allows\ you\ to\ use\ an\ item\ it,\ for\ now\ state\:\r\n\ "You\ used\ the\ <itemName>",\ where\ <itemName>\ is\ the\ name\ of\ the\ item.\r\n\ \r\n\ example\ return\ statement\:\r\n\ "You\ used\ the\ apple."\r\n\ \r\n\ In\ checkpoint\ 5\ this\ will\ be\ updated\ to\ only\ allow\ the\ player\ to\ use\ a\ Key\r\n\ in\ the\ room\ where\ the\ key\ can\ open\ a\ door\r\n\ \r\n\ @param\ takes\ in\ a\ string\ to\ determine\ what\ item\ you\ want\ to\ use\r\n\ @return\ a\ string\ that\ You\ used\ the\ item,\ do\ not\ use\ print\ or\ println\r\n
comment16.params=
comment16.target=java.lang.String\ help()
comment16.text=\r\n\ help\ method\r\n\ Method\ that\ returns\ all\ of\ the\ commands\ and\ what\ they\ do\r\n\ \r\n\ example\ return\ output\:\r\n\ "Command\ \ \ \ \ \ Example\ \ \ \ \ \ Description\r\n\ \ take\ \ \ \ \ \ \ \ \ take\ apple\ \ \ used\ to\ pick\ up\ objects"\r\n\ \r\n\ @return\ a\ String\ that\ contains\ all\ the\ command\ names,\ an\ example\ of\ use,\ and\ a\ description\ of\ what\ they\ do.\ \ Be\ sure\ to\ consider\ readability\ of\ the\ player.\ \ Do\ not\ use\ print\ or\ println.\r\n
comment17.params=
comment17.target=java.lang.String\ quit()
comment17.text=\r\n\ quit\ Method\r\n\ Method\ that\ states\ "You\ have\ decided\ to\ quit\ the\ game"\r\n\ @return\ a\ message\ saying\ You\ have\ decided\ to\ quit\ the\ game,\ do\ not\ use\ print\ or\ println\r\n
comment18.params=
comment18.target=java.lang.String\ invalid()
comment18.text=\r\n\ invalid\ method\r\n\ Method\ called\ when\ a\ player\ tries\ a\ command\ that\ is\ not\ used\ in\ the\ game\r\n\ @return\ message\ "I\ do\ not\ understand",\ do\ not\ use\ print\ or\ println\r\n
comment19.params=command\ item
comment19.target=java.lang.String\ executeCommand(java.lang.String,\ java.lang.String)
comment19.text=\r\n\ executeCommand\ method\r\n\ This\ method\ uses\ the\ first\ word\ to\ call\ the\ appropriate\ method\ that\ you\r\n\ made\ above.\ \ Basically,\ this\ method\ manages\ complexity\ by\ hosting\ the\ \r\n\ logic\ to\ detemine\ which\ method\ should\ be\ used.\r\n\ (for\ example,\ if\ the\ command\ is\ north,\ call\ the\ north()\ method).\ \r\n\ @param\ the\ String\ command\ used\ to\ check\ which\ method\ to\ call\r\n\ @param\ the\ String\ item\ used\ for\ methods\ that\ interact\ with\ objects\ \r\n\ @return\ a\ String\ that\ is\ passed\ back\ from\ the\ appropriate\ method,\ \r\n\ \ \ \ \ \ \ \ \ do\ not\ use\ print\ or\ println\r\n
comment2.params=
comment2.target=java.lang.String\ gameIntro()
comment2.text=\r\n\ gameIntro\ method\ \r\n\ used\ to\ set\ the\ scene\ to\ the\ opening\ of\ your\ game\ \r\n\ @return\:\ a\ String\ that\ is\ the\ opening\ description\ to\ your\ game,\ \r\n\ \ \ \ \ \ \ \ \ \ be\ sure\ to\ note\ the\ help\ option\ \r\n\ \ \ \ \ \ \ \ \ \ (i.e.\ "type\ help\ for\ a\ list\ of\ commands").\ \ \r\n
comment20.params=
comment20.target=void\ updateRoom()
comment20.text=\r\n\ TODO\:\ checkpoint\ 4\ Task\r\n\ \r\n\ make\ the\ updateRoom\ method\r\n
comment21.params=
comment21.target=Room\ getCurrentRoom()
comment21.text=\ \r\n\ TODO\:\ checkpoint\ 4\ Task\r\n\ \r\n\ make\ the\ getCurrentRoom\ method\r\n
comment22.params=args
comment22.target=void\ main(java.lang.String[])
comment23.params=
comment23.target=void\ setUpGame()
comment3.params=input
comment3.target=java.lang.String\ getFirstWord(java.lang.String)
comment3.text=\r\n\ getFirstWord\ method\r\n\ pulls\ the\ first\ word\ out\ of\ any\ phrase\ (1\ or\ more\ words)\r\n\ @param\ a\ string\ that\ contains\ the\ commands\ from\ the\ user\r\n\ @return\ a\ string\ that\ is\ only\ the\ first\ word,\ \r\n\ \ \ \ \ \ \ \ \ returns\ a\ blank\ string\ ""\ if\ nothing\ entered,\ \r\n\ \ \ \ \ \ \ \ \ do\ not\ use\ print\ or\ println\r\n
comment4.params=input
comment4.target=java.lang.String\ getRestOfSentence(java.lang.String)
comment4.text=\r\n\ getRestOfSentence\ \r\n\ pulls\ everything\ after\ the\ first\ word\ and\ the\ space\ behind\ it\r\n\ @param\ a\ string\ that\ contains\ the\ commands\ from\ the\ user\r\n\ @return\ a\ string\ that\ returns\ everything\ after\ the\ first\ word\ \r\n\ \ \ \ \ \ \ \ \ and\ the\ space\ behind\ it,\ returns\ a\ blank\ string\ ""\ if\ 1\ word\ entry\ \r\n\ \ \ \ \ \ \ \ \ or\ nothing\ entered.\ \r\n\ \ \ \ \ \ \ \ \ Do\ not\ use\ print\ or\ println\r\n
comment5.params=
comment5.target=java.lang.String\ north()
comment5.text=\r\n\ TODO\:\ checkpoint\ 4\ Task\r\n\ \r\n\ Update\ the\ "north"\ method\ to\ allow\ the\ player\ to\ move\ North\ only\ if\ possible\r\n\ Be\ sure\ to\ both\ move\ the\ player\ north\ and\ state\ that\ the\ player\ moved\ North\r\n\ If\ you\ cannot\ move\ North,\ then\ state\ that\ you\ cannot\ move\ North\r\n
comment6.params=
comment6.target=java.lang.String\ south()
comment6.text=\r\n\ TODO\:\ checkpoint\ 4\ Task\r\n\ \r\n\ Update\ the\ "south"\ method\ to\ allow\ the\ player\ to\ move\ South\ only\ if\ possible\r\n\ Be\ sure\ to\ move\ the\ player\ South\ and\ state\ that\ the\ player\ moved\ South\r\n\ If\ you\ cannot\ move\ South,\ then\ state\ that\ you\ cannot\ move\ South\r\n
comment7.params=
comment7.target=java.lang.String\ east()
comment7.text=\r\n\ TODO\:\ checkpoint\ 4\ Task\r\n\ \r\n\ Update\ the\ "east"\ method\ to\ allow\ the\ player\ to\ move\ East\ only\ if\ possible\r\n\ Be\ sure\ to\ both\ move\ the\ player\ East\ and\ state\ that\ the\ player\ moved\ East\r\n\ If\ you\ cannot\ move\ East,\ then\ state\ that\ you\ cannot\ move\ East\r\n
comment8.params=
comment8.target=java.lang.String\ west()
comment8.text=\r\n\ TODO\:\ checkpoint\ 4\ Task\r\n\ \r\n\ Update\ the\ "west"\ method\ to\ allow\ the\ player\ to\ move\ West\ only\ if\ possible\r\n\ Be\ sure\ to\ move\ the\ player\ West\ and\ state\ that\ the\ player\ moved\ West\r\n\ If\ you\ cannot\ move\ West,\ then\ state\ that\ you\ cannot\ move\ West\r\n
comment9.params=itemName
comment9.target=java.lang.String\ take(java.lang.String)
comment9.text=\r\n\ take\ method\r\n\ Method\ to\ allow\ you\ to\ take\ an\ item,\ for\ now\ you\ will\ just\ state\ that\ \r\n\ "You\ took\ the\ <itemName>."\ where\ <itemName>\ is\ the\ actual\ name\ of\ the\ item.\r\n\ \r\n\ example\ return\ statement\:\r\n\ "You\ took\ the\ apple."\ \r\n\ \r\n\ You\ will\ actually\ pick\ up\ items\ in\ checkpoint\ 5\r\n\ \r\n\ @param\ takes\ in\ a\ String\ to\ determine\ what\ object\ was\ picked\ up\r\n\ @return\ a\ String\ that\ states\ "You\ took\ the\ <itemName>",\ do\ not\ use\ print\ or\ println\r\n
numComments=24
